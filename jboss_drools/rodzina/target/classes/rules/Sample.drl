package com.sample
 
import com.sample.DroolsTest.Relacja;
import com.sample.DroolsTest.Osoba;
import com.sample.DroolsTest.Plec;

rule "Init"
	when
	then
		Osoba maria          = new Osoba("Maria");
		Osoba ewa            = new Osoba("Ewa");
		Osoba agata          = new Osoba("Agata");
		Osoba anna           = new Osoba("Anna");
		Osoba agnieszka      = new Osoba("Agnieszka");
		Osoba beata          = new Osoba("Beata");
		Osoba iwona          = new Osoba("Iwona");
		Osoba joanna         = new Osoba("Joanna");
		Osoba piotr          = new Osoba("Piotr");
		Osoba adam           = new Osoba("Adam");
		Osoba marek          = new Osoba("Marek");
		Osoba robert         = new Osoba("Robert");
		Osoba jan            = new Osoba("Jan");
		Osoba krzysztof      = new Osoba("Krzysztof");
		Osoba radek          = new Osoba("Radek");
		Osoba darek          = new Osoba("Darek");
		Osoba tomek          = new Osoba("Tomek");
		Osoba jacek          = new Osoba("Jacek");

		insert(new Relacja(maria,marek,"rodzic"));
		insert(new Relacja(maria,agata,"rodzic"));
		insert(new Relacja(maria,jan,"rodzic"));
		insert(new Relacja(piotr,marek,"rodzic"));
		insert(new Relacja(piotr,agata,"rodzic"));
		insert(new Relacja(piotr,jan,"rodzic"));
		insert(new Relacja(ewa,anna,"rodzic"));
		insert(new Relacja(ewa,joanna,"rodzic"));
		insert(new Relacja(ewa,krzysztof,"rodzic"));
		insert(new Relacja(adam,anna,"rodzic"));
		insert(new Relacja(adam,joanna,"rodzic"));
		insert(new Relacja(adam,krzysztof,"rodzic"));
		insert(new Relacja(agata,radek,"rodzic"));
		insert(new Relacja(agata,beata,"rodzic"));
		insert(new Relacja(robert,radek,"rodzic"));
		insert(new Relacja(robert,beata,"rodzic"));
		insert(new Relacja(anna,darek,"rodzic"));
		insert(new Relacja(anna,tomek,"rodzic"));
		insert(new Relacja(jan,darek,"rodzic"));
		insert(new Relacja(jan,tomek,"rodzic"));
		insert(new Relacja(agnieszka,jacek,"rodzic"));
		insert(new Relacja(agnieszka,iwona,"rodzic"));
		insert(new Relacja(krzysztof,jacek,"rodzic"));
		insert(new Relacja(krzysztof,iwona,"rodzic"));

end

rule "Kobieta"
	when
		r : Relacja( osoby[0].imie.endsWith("a") == true, osoby[0].plec == Plec.NIEZNANA)
	then
		r.osoby[0].plec = Plec.KOBIETA;
		for(int i = 0; i < r.osoby[0].relacje.size(); i++)
    	{
    		update(r.osoby[0].relacje.get(i));
    	}
end

rule "Mezczyzna"
	when
		r : Relacja( osoby[0].imie.endsWith("a") == false, osoby[0].plec == Plec.NIEZNANA)
	then
		r.osoby[0].plec = Plec.MEZCZYZNA;
		for(int i = 0; i < r.osoby[0].relacje.size(); i++)
    	{
    		update(r.osoby[0].relacje.get(i));
    	}
end

rule "Kobieta1"
	when
		r : Relacja( osoby[1].imie.endsWith("a") == true, osoby[1].plec == Plec.NIEZNANA)
	then
		r.osoby[1].plec = Plec.KOBIETA;
		for(int i = 0; i < r.osoby[1].relacje.size(); i++)
    	{
    		update(r.osoby[1].relacje.get(i));
    	}
end

rule "Mezczyzna1"
	when
		r : Relacja( osoby[1].imie.endsWith("a") == false, osoby[1].plec == Plec.NIEZNANA)
	then
		r.osoby[1].plec = Plec.MEZCZYZNA;
		for(int i = 0; i < r.osoby[1].relacje.size(); i++)
    	{
    		update(r.osoby[1].relacje.get(i));
    	}
end

rule "Ojciec"
	when
		r : Relacja( osoby[0].imie.endsWith("a") == false, relacja == "rodzic" )
	then
		insert(new Relacja(r.osoby[0], r.osoby[1] ,"ojciec"));
		System.out.println(r.osoby[0] + " jest ojcem " + r.osoby[1]);
end

rule "Matka"
	when
		r : Relacja( osoby[0].imie.endsWith("a") == true, relacja == "rodzic" )
	then
		insert(new Relacja(r.osoby[0], r.osoby[1] ,"matka"));
		System.out.println(r.osoby[0] + " jest matk¹ " + r.osoby[1]);
end

rule "Dziadek"
	when
		r : Relacja( osoby[0].imie.endsWith("a") == false, relacja == "rodzic" )
		w : Relacja(r.osoby[1] == osoby[0], relacja == "rodzic")
	then
		insert(new Relacja(r.osoby[0], w.osoby[1] ,"dziadek"));
		System.out.println(r.osoby[0] + " jest dziadkiem " + w.osoby[1]);
end

rule "Babcia"
	when
		r : Relacja( osoby[0].imie.endsWith("a") == true, relacja == "rodzic" )
		w : Relacja(r.osoby[1] == osoby[0], relacja == "rodzic")
	then
		insert(new Relacja(r.osoby[0], w.osoby[1] ,"babcia"));
		System.out.println(r.osoby[0] + " jest babci¹ " + w.osoby[1]);
end

rule "Brat"
	when
		r : Relacja( osoby[1].imie.endsWith("a") == false, relacja == "rodzic" )
		w : Relacja(r.osoby[1] != osoby[1], r.osoby[0] == osoby[0], relacja == "rodzic")
		not Relacja(r.osoby[1] == osoby[0], w.osoby[1] == osoby[1], relacja == "brat")
	then
		insert(new Relacja(r.osoby[1], w.osoby[1] ,"brat"));
		System.out.println(r.osoby[1] + " jest bratem " + w.osoby[1]);	
end

rule "Siostra"
	when
		r : Relacja( osoby[1].imie.endsWith("a") == true, relacja == "rodzic" )
		w : Relacja(r.osoby[1] != osoby[1], r.osoby[0] == osoby[0], relacja == "rodzic")
		not Relacja(r.osoby[1] == osoby[0], w.osoby[1] == osoby[1], relacja == "siostra")
	then
		insert(new Relacja(r.osoby[1], w.osoby[1] ,"siostra"));
		System.out.println(r.osoby[1] + " jest siostr¹ " + w.osoby[1]);	
end

rule "Stryj"
	when
		r : Relacja( relacja == "brat" )
		w : Relacja( r.osoby[1] == osoby[0], relacja == "ojciec" )
	then
		insert(new Relacja(r.osoby[0], w.osoby[1], 'stryj'));
		System.out.println(r.osoby[0] + " jest stryjem " + w.osoby[1]);	
end

rule "Wuj"
	when
		r : Relacja( relacja == "brat" )
		w : Relacja( r.osoby[1] == osoby[0], relacja == "matka" )
	then
		insert(new Relacja(r.osoby[0], w.osoby[1], 'wuj'));
		System.out.println(r.osoby[0] + " jest wujem " + w.osoby[1]);	
end


//regula kuzyn na samych rodzicach
rule "kuzyn"
    when
        Relacja(rodzic: osoby[0], ja: osoby[1], relacja == "rodzic")
        Relacja(dziadek: osoby[0], osoby[1] == rodzic, relacja == "rodzic")
        Relacja(osoby[0] == dziadek, rodzic2: osoby[1], rodzic2 != rodzic, relacja == "rodzic")
        Relacja(osoby[0] == rodzic2, kuzyn: osoby[1], kuzyn != ja, relacja == "rodzic")
        not Relacja(osoby[0] == kuzyn, osoby[1] == ja, relacja == "kuzyn")
    then
    	insert(new Relacja(kuzyn, ja, "kuzyn"));
        System.out.println( kuzyn.imie + " jest kuzynem_rodzic " + ja.imie);
end

//regula kuzyn nie tylko na rodzicach
rule "kuzyn_nie"
	when
		r : Relacja( relacja == "rodzic" )
		w : Relacja( r.osoby[0] == osoby[0], relacja == "brat" || relacja == "siostra" )
		z : Relacja( w.osoby[1] == osoby[0],  osoby[1].imie.endsWith("a") == false, relacja == "rodzic" )
	then
		insert(new Relacja(z.osoby[1], r.osoby[1], 'kuzyn'));
		System.out.println(z.osoby[1] + " jest kuzynem " + r.osoby[1]);
end

query "wuja lub stryj"
    r : Relacja( relacja == "wuj" || relacja == "stryj"  )
end